<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Coaching & Leadership Course</title>
    <!-- Favicon Links -->
    <link rel="apple-touch-icon" sizes="180x180" href="https://cdn-icons-png.flaticon.com/512/3281/3281289.png">
    <link rel="icon" type="image/png" sizes="32x32" href="https://cdn-icons-png.flaticon.com/512/3281/3281289.png">
    <link rel="icon" type="image/png" sizes="16x16" href="https://cdn-icons-png.flaticon.com/512/3281/3281289.png">
    <style>
        /* --- CSS Rules --- */
        * { margin: 0; padding: 0; box-sizing: border-box; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; }
        body { background-color: #f8fafc; margin: 0; padding: 0; line-height: 1.6; color: #333; }
        .header { background-color: #2c3e50; color: white; padding: 15px 0; text-align: center; font-size: 24px; position: relative; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); }
        .user-bar { background-color: #34495e; padding: 10px 30px; display: flex; justify-content: space-between; align-items: center; color: white; font-size: 15px; }
        .user-info { display: flex; align-items: center; gap: 15px; }
        .user-info svg { opacity: 0.8; }
        .user-details { display: flex; flex-direction: column; }
        .user-name { font-weight: 600; font-size: 15px; }
        .user-email { font-size: 13px; opacity: 0.8; }
        .logout-button { background-color: #e74c3c; color: white; border: none; padding: 8px 16px; border-radius: 6px; cursor: pointer; font-weight: 500; transition: all 0.3s; display: flex; align-items: center; gap: 6px; }
        .logout-button:hover { background-color: #c0392b; transform: translateY(-1px); }
        .logout-button:active { transform: translateY(0); }
        .container { max-width: 900px; margin: 40px auto; background: white; padding: 30px; box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.05); border-radius: 10px; }
        .question { margin-top: 25px; }
        .footer { text-align: center; padding: 15px; background: #2c3e50; color: white; margin-top: 40px; font-size: 14px; }
        .input-field { width: 100%; padding: 14px; margin: 10px 0; font-size: 16px; border: 1px solid #e0e4e7; border-radius: 8px; transition: all 0.3s; background-color: #f9fafb; }
        .input-field:focus { border-color: #3498db; outline: none; box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1); background-color: #fff; }
        .sr-only { position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0, 0, 0, 0); white-space: nowrap; border-width: 0; }
        .submit-button { background: linear-gradient(90deg, #3498db, #2980b9); color: white; border: none; padding: 14px 25px; font-size: 16px; cursor: pointer; border-radius: 8px; display: block; width: 100%; font-weight: 600; transition: all 0.3s; margin-top: 15px; box-shadow: 0 4px 6px rgba(52, 152, 219, 0.1); }
        .submit-button:hover { background: linear-gradient(90deg, #2980b9, #3498db); box-shadow: 0 6px 8px rgba(52, 152, 219, 0.15); transform: translateY(-1px); }
        .submit-button:active { transform: translateY(0); }
        .error-message { color: #e74c3c; font-size: 14px; margin-top: 8px; display: none; font-weight: 500; }
        .article-container { position: relative; margin: 25px 0; padding-top: 40px; }

        /* --- STYLE للرابط العادي (Unlocked) --- */
        .article-link {
            display: inline-block;
            background: linear-gradient(90deg, #3498db, #2ecc71); /* <<< الخلفية الأصلية */
            color: white; /* <<< اللون الأصلي */
            padding: 14px 30px;
            text-decoration: none;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s;
            box-shadow: 0 4px 6px rgba(52, 152, 219, 0.1);
            opacity: 1;
            pointer-events: auto;
            cursor: pointer; /* Ensure cursor is pointer when unlocked */
        }
        /* --- STYLE للرابط المقفل (Locked) --- */
        .article-link.locked {
            opacity: 0.7;
            pointer-events: none;
            background: #bdc3c7; /* <<< الخلفية الرمادية عند القفل */
            cursor: not-allowed;
        }

        .article-link:hover:not(.locked) { background: linear-gradient(90deg, #2980b9, #27ae60); box-shadow: 0 6px 8px rgba(52, 152, 219, 0.15); transform: translateY(-1px); }
        .article-link:active:not(.locked) { transform: translateY(0); }
        .lock-message { position: absolute; top: 0; left: 50%; transform: translateX(-50%); background: #e74c3c; color: white; padding: 8px 20px; border-radius: 6px; font-size: 14px; box-shadow: 0 4px 6px rgba(0,0,0,0.1); z-index: 1; width: max-content; max-width: 90%; text-align: center; animation: pulse 2s infinite; font-weight: 500; display: block; }
        .lock-message.unlocked { display: none; }
        @keyframes pulse { 0% { transform: translateX(-50%) scale(1); } 50% { transform: translateX(-50%) scale(1.05); } 100% { transform: translateX(-50%) scale(1); } }
        .course-image { width: 100%; height: auto; max-height: 450px; object-fit: cover; margin: 20px 0; border-radius: 8px; border: 1px solid #e0e4e7; box-shadow: 0 4px 6px rgba(0,0,0,0.05); }
        .modal-overlay { display: none; position: fixed; top: 0; left: 0; right: 0; bottom: 0; background: rgba(0,0,0,0.7); z-index: 1000; justify-content: center; align-items: center; }
        .modal-content { background: white; padding: 30px; border-radius: 12px; max-width: 450px; width: 90%; text-align: center; box-shadow: 0 10px 30px rgba(0,0,0,0.2); position: relative; animation: modalFadeIn 0.3s ease-out; }
        @keyframes modalFadeIn { from { opacity: 0; transform: translateY(-20px); } to { opacity: 1; transform: translateY(0); } }
        .modal-button { background: linear-gradient(90deg, #2ecc71, #27ae60); color: white; border: none; padding: 12px 25px; border-radius: 8px; cursor: pointer; margin-top: 20px; font-weight: 600; transition: all 0.3s; box-shadow: 0 4px 6px rgba(46, 204, 113, 0.1); }
        .modal-button:hover { background: linear-gradient(90deg, #27ae60, #2ecc71); box-shadow: 0 6px 8px rgba(46, 204, 113, 0.15); transform: translateY(-1px); }
        .modal-button:active { transform: translateY(0); }
        .close-modal { position: absolute; top: 15px; right: 15px; background: none; border: none; font-size: 22px; cursor: pointer; color: #95a5a6; transition: color 0.3s; line-height: 1; }
        .close-modal:hover { color: #7f8c8d; }
        .author-info { background-color: #f8f9fa; padding: 20px; border-left: 4px solid #3498db; margin: 25px 0; font-style: italic; border-radius: 0 6px 6px 0; transition: border-left-color 0.3s ease; }
        .author-info:hover { border-left-color: #2980b9; }
        h2, h3 { color: #2c3e50; }
        h2 { margin-bottom: 20px; font-size: 28px; }
        h3 { margin: 25px 0 15px; font-size: 22px; }
        p { margin-bottom: 15px; color: #34495e; line-height: 1.6; }
        .course-author { font-weight: 600; color: #e67e22; font-style: italic; }
        .invalid-field-style { border-color: #e74c3c !important; box-shadow: 0 0 0 3px rgba(231, 76, 60, 0.1) !important; }
    </style>
</head>
<body>
    <!-- Header Section -->
    <header class="header">Coaching & Leadership Course</header>

    <!-- User Information Bar -->
    <div class="user-bar">
        <!-- ... (User Info + Logout Button) ... -->
        <div class="user-info">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"> <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path> <circle cx="12" cy="7" r="4"></circle> </svg>
            <div class="user-details">
                <span class="user-name" id="userName">Loading...</span>
                <span class="user-email" id="userEmail"></span>
            </div>
        </div>
        <button class="logout-button" onclick="logout()">
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"> <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path> <polyline points="16 17 21 12 16 7"></polyline> <line x1="21" y1="12" x2="9" y2="12"></line> </svg>
            Logout
        </button>
    </div>

    <!-- Main Content Area -->
    <main class="container">
        <h2>Welcome to the Coaching & Leadership Course!</h2>
        <p>This comprehensive course, expertly developed by <span class="course-author">Mohamed Elmenisy</span>, integrates insightful articles, relevant visuals, and interactive questions designed to sharpen your leadership skills.</p>
        <div class="author-info">
            <p>"Great leaders don't set out to be leaders. They set out to make a difference. It's never about the role - always about the goal."</p>
            <p>- Mohamed Elmenisy, Learning and Development</p>
        </div>
        <h3>First Article: Introduction to Coaching & Leadership</h3>
        <div class="article-container">
            <div class="lock-message" id="lockMessage">Complete the question below to unlock this content</div>
            <a href="article1.html" id="articleLink" class="article-link locked">READ THE FULL ARTICLE</a>
        </div>
        <img src="https://images.unsplash.com/photo-1556761175-5973dc0f32e7?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1032&q=80"
             alt="Team members collaborating around a laptop" class="course-image">
        <div class="question">
            <h3>Interactive Question</h3>
            <p>What is your goal for taking this Coaching & Leadership course?</p>
            <form id="questionForm" novalidate>
                <label for="name" class="sr-only">Your Name</label>
                <input type="text" id="name" class="input-field" placeholder="Enter your name" required>
                <label for="answer" class="sr-only">Your Goal</label>
                <textarea id="answer" class="input-field" placeholder="Write your answer here (minimum 20 characters)" rows="5" required minlength="20"></textarea>
                <p id="error-message" class="error-message"></p>
                <button type="submit" class="submit-button" id="submitBtn">Submit Your Answer</button>
            </form>
        </div>
    </main>

    <!-- Footer Section -->
    <footer class="footer">© 2025 Elmenisy Leadership Coaching - All Rights Reserved</footer>

    <!-- Success Modal -->
    <div id="successModal" class="modal-overlay">
        <div class="modal-content">
            <button class="close-modal" onclick="closeModal()" aria-label="Close Modal">×</button>
            <h3>Thank You for Your Submission!</h3>
            <p>We appreciate you taking the time to share your goals with us. Your insights are valuable to your leadership journey.</p>
            <p>You now have full access to the article. We hope you find it informative and relevant to your objectives.</p>
            <button class="modal-button" onclick="redirectToArticle()">ACCESS ARTICLE</button>
        </div>
    </div>

    <script>
        // --- Configuration & Constants ---
        const FORMSPREE_ENDPOINT = 'https://formspree.io/f/xzzeqvea';
        const LOGGED_IN_KEY = 'isUserLoggedIn';
        const CURRENT_USER_KEY = 'currentUserData';
        const UNLOCK_ANSWER_KEY = 'introGoalAnswer';
        const UNLOCK_NAME_KEY = 'introGoalSubmitterName';

        // --- DOM Element References ---
        const userNameDisplay = document.getElementById('userName');
        const userEmailDisplay = document.getElementById('userEmail');
        const questionForm = document.getElementById('questionForm');
        const nameInput = document.getElementById('name');
        const answerInput = document.getElementById('answer');
        const errorMessageDisplay = document.getElementById('error-message');
        const lockMessage = document.getElementById('lockMessage');
        const articleLink = document.getElementById('articleLink');
        const successModal = document.getElementById('successModal');
        const submitBtn = document.getElementById('submitBtn');

        // --- Initialization ---
        document.addEventListener('DOMContentLoaded', initializePage);

        function initializePage() {
            // Check Login Status
            if (localStorage.getItem(LOGGED_IN_KEY) !== 'true') {
                console.log("User not logged in. Redirecting to login.");
                window.location.href = 'login.html';
                return;
            }
            // Display User Info
            displayUserInfo();
            // Check Unlock Status
            checkUnlockStatus();
            // Add Event Listeners
            addEventListeners();
            console.log("Index page initialized for logged-in user."); // DEBUG
        }

        // --- Core Functions ---
        function displayUserInfo() { /* ... (Keep unchanged) ... */ }
        function checkUnlockStatus() { /* ... (Keep unchanged) ... */ }

        function lockContent() {
            console.log("Locking content..."); // DEBUG
            if(lockMessage) lockMessage.classList.remove('unlocked');
            if(articleLink) articleLink.classList.add('locked');
            // Optionally reset form fields when locking? Maybe not desired.
        }

        function unlockContent() {
            console.log("Unlocking content..."); // DEBUG
            if(lockMessage) lockMessage.classList.add('unlocked');
            if(articleLink) articleLink.classList.remove('locked');
        }

        function storeAnswersLocally(name, answer) { /* ... (Keep unchanged) ... */ }
        function logout() { /* ... (Keep unchanged) ... */ }

        // --- Event Handling ---
        function addEventListeners() {
            if (questionForm) {
                questionForm.addEventListener('submit', handleFormSubmit);
            }
            document.addEventListener('keydown', handleKeyDown);
            if (articleLink) {
                articleLink.addEventListener('click', handleLockedLinkClick);
            }
        }

        function handleFormSubmit(event) {
            event.preventDefault();
            console.log("Handling form submit..."); // DEBUG

            if (!nameInput || !answerInput || !userEmailDisplay) { return; }

            const name = nameInput.value.trim();
            const answer = answerInput.value.trim();
            const email = userEmailDisplay.textContent.trim();

            // --- Validation ---
            hideError();
            let isValid = true;
            if (!name) {
                showError("Please enter your name.", nameInput);
                isValid = false;
            }
            if (answer.length < 20) {
                 showError("Please write a more detailed answer (at least 20 characters).", answerInput);
                 isValid = false;
            }
            if (!isValid) {
                 console.log("Form validation failed."); // DEBUG
                 return;
            }

            // --- If Validation Passes ---
            console.log("Form validation passed. Storing, sending, unlocking..."); // DEBUG
            storeAnswersLocally(name, answer);
            const formData = new FormData();
            formData.append('name', name);
            formData.append('email', email);
            formData.append('goal_answer', answer);
            formData.append('page', document.title);
            sendToFormspree(formData);
            unlockContent(); // <<< This removes the .locked class
            showSuccessModal();
        }

        function sendToFormspree(formData) { /* ... (Keep unchanged) ... */ }
        function handleKeyDown(e) { /* ... (Keep unchanged) ... */ }
        function handleLockedLinkClick(e) { /* ... (Keep unchanged) ... */ }

        // --- UI Update Functions ---
        function showError(message, fieldToFocus = null) { /* ... (Keep unchanged) ... */ }
        function hideError() { /* ... (Keep unchanged) ... */ }
        function showSuccessModal() { /* ... (Keep unchanged) ... */ }
        function closeModal() { /* ... (Keep unchanged) ... */ }
        function redirectToArticle() { /* ... (Keep unchanged) ... */ }

    </script>
</body>
</html>
